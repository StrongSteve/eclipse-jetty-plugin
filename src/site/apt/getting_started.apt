 -----
 Eclipse Jetty Integration - Getting started
 -----
 Christian Köberl
 -----
 May 2011

Getting started

* Running

 To run a web project using Eclipse Jetty - just go to your Run/Debug configurations and click on "New launch 
 configuration". Select the project (if it's not yet select). Usually you should be able to run and debug your project
 now.

* WebApp Settings

 Eclipse Jetty defaults to the 
 {{{http://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html}Maven standard directory layout}}
 - therfore the default WebApp directory will be "src/main/webapp". If your WebApp directory is located somewhere else
 choose the correct location.

 Further options on the "WebApp" tab are the context path and the port under which your application should run.

 On the bottom you can add your own Jetty confguration file (jetty.xml) - this enables the whole configration 
 possibilities provided by Jetty.

[images/DebugDialog.jpg] The WebApp settings

* Options 

[images/Options.jpg] Options for Eclipse Jetty

 On the tab "Options" you can choose your Jetty version. Eclipse Jetty comes with an embedded Jetty 8 - if you want to
 use another version define the path to your Jetty installation. Eclipse Jetty will automatically detect the version
 (supported are currently 6.x - 9.x).

 The Jetty features can be enabled/disabled below - currenlty supported is JNDI and JSP support. JMX and AJP will be
 added in future releases.
 
 If you enable "Show Detailed Server Info" additional information will be shown on startup in
 the console window. Here's an example:

+--
   ____    ___                   __    __  __         ___
  / __/___/ (_)__  ___ ___   __ / /__ / /_/ /___ __  ( _ )
 / _// __/ / / _ \(_-</ -_) / // / -_) __/ __/ // / / _  |
/___/\__/_/_/ .__/___/\__/  \___/\__/\__/\__/\_, /  \___/
           /_/                              /___/

   Configuration: C:\Temp\eclipseJettyPlugin.quickstart_jetty_embedded.xml
                  C:\workspace\quickstart\src\main\webapp\jetty7-web.xml
         Version: 8.1.12.v20130726
         Context: /
            Port: 8080, 8443
       Classpath: C:/Repository/antlr/antlr/2.7.7/antlr-2.7.7.jar
                  C:/Repository/com/yahoo/platform/yui/yuicompressor/2.4.6/yuicompressor-2.4.6.jar
                  C:/Repository/commons-codec/commons-codec/1.5/commons-codec-1.5.jar
                  [...]
+--

* Integration with Eclipse m2e Plugin

[images/Maven.jpg] Maven Settings for Eclipse Jetty

 Eclipse Jetty reads information from the m2e plugin (if you use it) and uses it to generate the correct classpath for
 launching your application. The default is to include compile and runtime scope - you can changed this by selecting
 other scopes. 
 
 The scopes are listed in the table. If the dependency is unknown to Maven, or you are not using
 the m2e plugin, the scope is left blank. The default include/exclude settings can be overwritten with the left check box
 in the table.
 
 All libraries will be loaded by Jetty within the web application. Sometimes, however, it is necessary, to provide libraries
 in the global classloader (e.g. if you need a database driver as JNDI resource). In such a case, you can check the right check box
 labeled "Global".
 